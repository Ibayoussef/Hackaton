import Head from "next/head";
import { GetServerSideProps } from "next";
import { HomeProps } from "@/Enums/Props";
import { Container, PlayerGrid, Searchbar, Pagination } from "@/components";
import { useState, useEffect } from "react";
import { FootPlayer } from "@/Enums/FootPlayers";
import { usePaginate } from "@/hooks/usePaginate";
const Home: React.FC<HomeProps> = ({ data }) => {
  const [displayedData, setDisplayedData] = useState<FootPlayer[][]>([]);
  const [searchValue, setSearchValue] = useState<string>("");
  const [page, setPage] = useState(0);

  useEffect(() => {
    if (searchValue) {
      setPage(0);
    }
    if (!searchValue) {
      // eslint-disable-next-line react-hooks/rules-of-hooks
      const paginatedData = usePaginate(data);
      setDisplayedData(paginatedData);
    }
  }, [searchValue]);

  return (
    <>
      <Head>
        <title>Hackaton</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Searchbar
          data={data}
          setDisplayedData={setDisplayedData}
          setSearchValue={setSearchValue}
        />
        <PlayerGrid data={displayedData[page]} />
        <Pagination data={displayedData} setPage={setPage} page={page} />
      </Container>
    </>
  );
};
export const getServerSideProps: GetServerSideProps<HomeProps> = async () => {
  const response = await fetch(`${process.env.FETCH_URL}/api/players`);
  const data = await response.json();
  return {
    props: { data },
  };
};

export default Home;
